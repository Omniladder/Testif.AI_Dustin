"Closure Properties of Regular Languages\n\nWe show how to combine regular languages.Closure Properties\nA set is closed under an operation if applying that operation to any members of the set always yields a member of the set. For example, the positive integers are closed under addition and multiplication, but not division.Closure under Kleene\n\nFact: The set of regular languages is closed under each Kleene operation. That is, if L1 and L2 are regular languages, then each of L1 \u222a L2, L1 L2, and L1* is regular.Proving Closure under Kleene\nThe easiest approach is to show that the regular expressions (REs) for L1 and L2 can be combined or adjusted to form the RE for the combined language. \nExample: The RE for the concatenation of L1 and L2 (denoted as L1L2) is obtained by writing down the RE for L1 followed by the RE for L2.Closure under Complementation\n\nFact: The set of regular languages is closed under complementation.\n\nThe complement of a language L, written as L', is the set of all strings not in L but with the same alphabet.\n\nThis statement means that if L is a regular language, then L' is also a regular language.\n\nTo understand this fact, consider a deterministic finite automaton (FA) for L and interchange the accept and reject states.Closure under Intersection\n\nFact: The set of regular languages is closed under intersection.\n\nOne approach: Use de Morgan\u2019s law:\nL1 \u2229 L2 = (L1 \u222a L2)'\n\nIt is known that regular languages are closed under union and complementation.Product Construction for Intersection\n\nEach state in the product is a pair of states from the original machines. Formally, if L1 is accepted by DFA M1 with the 5-tuple (Q1, \u03a3, q1, T1, \u03b41) and L2 is accepted by DFA M2 with the 5-tuple (Q2, \u03a3, q2, T2, \u03b42), then L1 \u2229 L2 is accepted by the DFA (Q1 \u00d7 Q2, \u03a3, (q1, q2), T1 \u00d7 T2, \u03b4) where \u03b4((r, s), x) = (\u03b41(r, x), \u03b42(s, x)).Example: Even 0\u2019s and 1\u2019s\nSuppose L1 is the set of binary strings with an even number of 0\u2019s, and L2 is the set of binary strings with an even number of 1\u2019s. Then the finite automata (FAs) for these languages both have two states:\n\nStates: A, B\nTransitions: \n- From state A:\n  - On input 0, go to state B\n  - On input 1, stay in state A\n- From state B:\n  - On input 0, stay in state A\n  - On input 1, go to state B\n\nThus, the finite automata for L1 \u2229 L2 has four states.Product Construction for Even 0's and 1's\n\nA,X  A,Y\nB,Y  B,X\n\n1\n1\n10\n00\n0\n\nGoddard 4a: 9Overview\nA regular language is one that can be represented by a finite automaton (FA) or a regular expression (RE). Regular languages are closed under the following operations: union, concatenation, star, and complementation."